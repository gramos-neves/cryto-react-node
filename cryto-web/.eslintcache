[{"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\reportWebVitals.ts":"1","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changeCoins\\index.tsx":"2","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\App.tsx":"3","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\Login\\index.tsx":"4","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\Login\\styles.ts":"5","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\index.tsx":"6","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\dashboard\\index.tsx":"7","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\dashboard\\styles.ts":"8","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changeCoins\\styles.ts":"9","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changecoins\\index.tsx":"10","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\routes.tsx":"11","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\service\\api.ts":"12"},{"size":425,"mtime":1608243622785,"results":"13","hashOfConfig":"14"},{"size":3350,"mtime":1610071038287,"results":"15","hashOfConfig":"14"},{"size":135,"mtime":1609888977119,"results":"16","hashOfConfig":"14"},{"size":1243,"mtime":1610052157072,"results":"17","hashOfConfig":"14"},{"size":1033,"mtime":1610052797175,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1608243622785,"results":"19","hashOfConfig":"14"},{"size":2591,"mtime":1610071114071,"results":"20","hashOfConfig":"14"},{"size":1451,"mtime":1610035024607,"results":"21","hashOfConfig":"14"},{"size":2328,"mtime":1610068689990,"results":"22","hashOfConfig":"14"},{"size":1122,"mtime":1609961691929,"results":"23","hashOfConfig":"14"},{"size":542,"mtime":1609961766015,"results":"24","hashOfConfig":"14"},{"size":125,"mtime":1609965976080,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19frwb3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\reportWebVitals.ts",[],["52","53"],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changeCoins\\index.tsx",["54"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, ContainerBody, Back, Body } from './styles';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from '../../service/api';\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\n\r\n\r\ninterface Currency {\r\n    currency: string;\r\n    value: number;\r\n}\r\n\r\nconst Changecoins: React.FC = () => {\r\n    const [selectCurrencies, setSelectCurrencies] = useState({} as any);\r\n    const [currency, setCurrency] = useState<Currency>();\r\n    const [newCurreny, setNewCurrency] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const [error,setError] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n          //load token e validação\r\n          async function validateToken() {\r\n            const accessToken = localStorage.getItem(\"@cryto:token\");\r\n            if (!accessToken) {\r\n                // eslint-disable-next-line\r\n                history.push('/')\r\n            }\r\n\r\n        }\r\n\r\n        async function seachCurrency() {\r\n            await api.get('/cryto/btc/currency')\r\n                .then(resp => {\r\n                    setCurrency({currency:\"BRL\",value:resp.data.BRL})\r\n                    setSelectCurrencies(resp.data)\r\n                })\r\n        }\r\n        validateToken();\r\n        seachCurrency();\r\n    }, [])\r\n\r\n\r\n    function handleBack() {\r\n        // eslint-disable-next-line\r\n        history.push('/dashboard')\r\n    }\r\n\r\n    function handleSelect(event: any) {\r\n        const sigla = event.target.value;\r\n        const currency = {\r\n            currency: sigla,\r\n            value: selectCurrencies[`${sigla}`]\r\n        }\r\n\r\n        setCurrency(currency)\r\n    }\r\n\r\n\r\n   async function  handleSalve() {\r\n\r\n    if(!newCurreny){\r\n        setError(true)\r\n      }else{\r\n          const data = {\r\n            currency: currency?.currency,\r\n            value: newCurreny\r\n        }\r\n       await api.post('/cryto/btc', data)\r\n            history.push('/dashboard')\r\n      }\r\n       \r\n    }\r\n\r\n\r\n    function handleAlterInput(event: any){\r\n         setError(false);\r\n        setNewCurrency(event.target.value) \r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <ContainerBody>\r\n                <Back>\r\n                    <button onClick={() => handleBack()} > \r\n                    <FaArrowLeft size={15}   /> \r\n                     Voltar</button>\r\n                </Back>\r\n                <Body isErrored={error} >\r\n                    <strong>Moeda</strong>\r\n                    <select value={currency?.currency}\r\n                        onChange={(event) => handleSelect(event)} >\r\n                        <option value=\"BRL\">BRL</option>\r\n                        <option value=\"EUR\">EUR</option>\r\n                        <option value=\"CAD\">CAD</option>\r\n\r\n                    </select>\r\n\r\n\r\n                    <span>Valor Atual: {currency?.value}</span>\r\n                    <strong>Novo Valor</strong>\r\n                    <input required={true} type=\"number\" min=\"0.1\"  value={newCurreny} placeholder=\"5.500\" onChange={(event) => handleAlterInput(event)} />\r\n                    <button onClick={() => handleSalve()} >\r\n                        Salvar\r\n                       \r\n                        </button>\r\n                </Body>\r\n\r\n            </ContainerBody>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default Changecoins;\r\n\r\n","F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\App.tsx",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\Login\\index.tsx",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\Login\\styles.ts",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\index.tsx",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\dashboard\\index.tsx",["55"],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\dashboard\\styles.ts",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changeCoins\\styles.ts",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\pages\\changecoins\\index.tsx",["56"],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\routes.tsx",[],"F:\\projetos\\React\\crypto-moeda\\cryto-web\\src\\service\\api.ts",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":44,"column":8,"nodeType":"63","endLine":44,"endColumn":10,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"62","line":44,"column":8,"nodeType":"63","endLine":44,"endColumn":10,"suggestions":"65"},{"ruleId":"66","severity":2,"message":"67","line":7,"column":21,"nodeType":"68","endLine":7,"endColumn":31},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["71"],["72"],"react-hooks/rules-of-hooks","React Hook \"useHistory\" is called in function \"changeCoins: React.FC\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"73","fix":"75"},"Update the dependencies array to be: [history]",{"range":"76","text":"77"},{"range":"78","text":"77"},[1301,1303],"[history]",[1124,1126]]